// Copyright 2018 Sogou Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package sogou.speech.mt.v1;

option cc_enable_arenas = true;
option csharp_namespace = "Sogou.Speech.MT.V1";
option go_package = "golang.speech.sogou.com/apis/mt/v1;mt";
option java_multiple_files = true;
option java_outer_classname = "MTProto";
option java_package = "com.sogou.speech.mt.v1";
option objc_class_prefix = "SPB";
option php_namespace = "Sogou\\Speech\\MT\\V1";
option swift_prefix = "SPB";


service mt {

    rpc TranslateText(TranslateTextRequest) returns (TranslateTextResponse);
    rpc DetectLanguage(DetectLanguageRequest) returns (DetectLanguageResponse);
}

message TranslateTextRequest {

  // *Required* The translate configurations
  TranslateConfig config = 1;

  // *Required* The text will be translated
  string text = 2;
  
}

message TranslateConfig {

  // *Required* The language code of the source text, 
  // set to one of the language codes listed in [Language Support](https://docs.zhiyin.sogou.com/docs/mt/resources/languages). 
  // Example: "zh-cmn-Hans-CN".
  string source_language_code = 1;

  // *Required* The language code of the target text
  string target_language_code = 2;
  
}


message TranslateTextResponse {
  
  // Source text 
  string source_text = 1;

  // Text translated into the target language.
  string translated_text = 2;

  // The language code of the source text
  string source_language_code = 3;

  // The language code of the target text
  string target_language_code = 4;

}

message DetectLanguageRequest {

  // Required. The content of the input stored as a string.
  string text = 1;

  // Optional. The language detection model to be used.
  string model = 2;
}

message DetectLanguageResponse {

  // A list of detected languages sorted by detection confidence in descending order. The most probable language first.
  repeated DetectedLanguage languages = 1;
}

message DetectedLanguage {

  // The zhiyin [Language Support](https://docs.zhiyin.sogou.com/docs/mt/resources/languages) language code of source content in the request, detected automatically.
  string language_code = 1;

  // The confidence of the detection result for this language.
  float confidence = 2;
}