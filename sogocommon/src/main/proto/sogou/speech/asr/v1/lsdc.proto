// Copyright 2018 Sogou Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package sogou.speech.asr.v1;

option cc_enable_arenas = true;
option csharp_namespace = "Sogou.Speech.Asr.V1";
option go_package = "golang.speech.sogou.com/apis/asr/v1;asr";
option java_multiple_files = true;
option java_outer_classname = "LSDCProto";
option java_package = "com.sogou.speech.asr.v1";
option objc_class_prefix = "SPB";
option php_namespace = "Sogou\\Speech\\Asr\\V1";
option swift_prefix = "SPB";

// Speaker Diarization Config for LongRunningRecognition, Add config to asr.RecognitionConfig.AudioEncoding.extra_configs
// If LongrunningSpeakerDiarizationConfig appears in extra_configs and EnableWordTimeOffsets is enabled,
// then speaker diarized response can be fetched from longrunning.GetOperation(name + ":" + sd_configs[n].diarization_result_suffix)
message LongrunningSpeakerDiarizationConfig {

    repeated LongrunningSpeakerDiarizationConfigInfo sd_configs = 1;

}

message LongrunningSpeakerDiarizationConfigInfo {

    //Speaker count, [2-4], default is 2
    int32 diarization_speaker_count = 1;

    //Speaker Result Name Suffix
    string diarization_result_suffix = 2;

}

